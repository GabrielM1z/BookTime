version: '3'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_dockerizing
    ports:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_DB: booktime_book
      POSTGRES_PASSWORD: postgres123
      POSTGRES_USER: postgres
    volumes:
      - database_dockerizing:/var/lib/postgresql/data
      - ./dbshell/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fullstack

  api_books:
    container_name: api_books
    build: ./book
    ports:
      - 8080:8080
    restart: always
    volumes:
      - api_volume:/usr/src/app/
    depends_on:
      - postgres
    networks:
      - fullstack

  api_gateway:
    container_name: api_gateway
    build: ./gateway
    ports:
      - 8082:8080
    restart: always
    volumes:
      - api_volume:/usr/src/app/
    networks:
      - fullstack

  migrate:
    image: migrate/migrate:v4.15.2
    profiles: ["tools"]
    volumes:
      - ./migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://postgres:postgres123@postgres:5432/booktime_book?sslmode=disable",
      ]
    command: ["up"]
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: booktime_book
      DB_USER: postgres
      DB_PASSWORD: postgres123
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
    command: ["start-dev"]  # Démarrage en mode développement
    ports:
      - 8081:8080
    depends_on:
      - postgres
    restart: always
    networks:
      - fullstack

volumes:
  database_dockerizing:
  api_volume:

networks:
  fullstack:
    driver: bridge


